services:

  redis:
    container_name: stack.data.redis
    image: redis:${REDIS_VERSION}
    restart: always
    # If you want to the reverser proxy. Don't forget to add endpoint and expose port on traefik.
    #labels:
    #  - "traefik.enable=true"
    #  - "traefik.tcp.routers.redis.rule=HostSNI(`*`)"
    #  - "traefik.tcp.routers.redis.entrypoints=redis"
    #  - "traefik.tcp.routers.redis.service=redis"
    #  - "traefik.tcp.services.redis.loadbalancer.server.port=6379"
    ports:
      - "6379:6379"

  rabbitmq:
    container_name: stack.data.rabbitmq
    image: rabbitmq:${RABBITMQ_VERSION}
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.${DOMAIN}`)"
      - "traefik.http.routers.rabbitmq.entrypoints=web"
      - "traefik.http.routers.rabbitmq.service=rabbitmq"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
    ports:
      - "5672:5672"
      - "15672"
    environment:
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASSWORD}


  postgresql:
    container_name: stack.data.postgresql
    image: postgres:${POSTGRESQL_VERSION}
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  mysql:
    container_name: stack.data.mysql
    image: mysql:${MYSQL_VERSION}
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - mysql-data:/var/lib/mysql

volumes:
  postgresql-data:
  mysql-data:


networks:
  default:
    name: ${DOCKER_NETWORK}
    external: true
