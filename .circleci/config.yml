version: 2.1

orbs:
  codecov: codecov/codecov@3.2.3
jobs:
  
  coverage:
    docker:
      - image: rust:1.64.0-slim
    steps:
      - checkout
      - run:
          name: Install grcov
          command: rustup component add llvm-tools-preview && cargo install grcov
      - run:
          name: Run test
          command: export RUSTFLAGS="-Cinstrument-coverage" && export LLVM_PROFILE_FILE="your_name-%p-%m.profraw" && cd cli && cargo build && cargo test
      - run:
          name: Run grcov
          command: cd cli && grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info 
      - run:
          name: Install codecov deps
          command: apt-get update && apt-get install -y curl gpg git
      - codecov/upload:
          file: cli/lcov.info

  tests:
    docker:
      - image: rust:1.64.0-slim
    steps:
      - checkout
      - restore_cache:
          key: cargo-{{ checksum "cli/Cargo.toml" }}
      - run:
          name: Run Tests
          command: cd cli && cargo test
      - save_cache:
          key: cargo-{{ checksum "cli/Cargo.toml" }}
          paths:
            - "~/.cargo"
  build:
    docker:
      - image: rust:1.64.0-slim
    steps:
      - checkout
      - restore_cache:
          key: cargo-{{ checksum "cli/Cargo.toml" }}
      - run:
          name: Build
          command: cd cli && cargo build --release
      - save_cache:
          key: cargo-{{ checksum "cli/Cargo.toml" }}
          paths:
            - "~/.cargo"
      - persist_to_workspace:
          root: cli/target
          paths:
            - release
  github_release:
    docker:
      - image: cibuilds/github:0.13.0
    steps:
      - attach_workspace:
          at: work
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} work/release/dctl

workflows:
  version: 2
  test_build_release:
    jobs:
      - tests:
          filters:
            tags:
              only: /.*/
      - coverage:
          requires:
            - tests
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - tests
          filters:
            tags:
              only: /.*/
      - do_release:
          type: approval
          requires:
            - tests
            - build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - github_release:
          requires:
            - do_release
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/

